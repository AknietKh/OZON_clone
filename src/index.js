//–ù–∞–∂–∞—Ç–∏–µ –Ω–∞ –ª–æ–≥–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞ –Ω–∞—á–∞–ª—å–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
{
  const logoBtn = document.querySelector('.logo');
  const filterText = document.querySelector('.filter-title h5');

  logoBtn.addEventListener('click', (e) => {
    event.preventDefault();
    filterText.textContent = "–§–∏–ª—å—Ç—Ä";
    getData().then(data => {
        renderCards(data);
        pagination(data);
        actionPage();
      });
  });
}

function pagination(data, search = '') {
  const URL = 'http://localhost:3000/goods';
  const pagination = document.querySelector('.pagination-wrapper')
  const paginationContent = pagination.querySelector('.pagination-content');
  const arrowLeft = pagination.querySelector('.arrow-left');
  const arrowRight = pagination.querySelector('.arrow-right');
  const paginationLength = Math.ceil(data.length / 8);

  paginationContent.textContent = '';
  pagRequest();
  
  if (paginationLength > 1) {
    pagination.style.display = '';
    for (let i = 1; i <= paginationLength; i++) {
      const pagNum = document.createElement('span');
      pagNum.className = 'pagination-number';
      pagNum.innerHTML = i;
      paginationContent.append(pagNum);
      pagNum.addEventListener('click', (event) => {
        pagRequest(event);
        const pagNums = document.querySelectorAll('.pagination-number');
        pagNums.forEach((elem) => {
          if (elem === event.target) {
            elem.classList.add('active');
          } else {
            elem.classList.remove('active');
          }
        })
      })
    }

    arrowLeft.addEventListener('click', pagRequest)
  } else {
    pagination.style.display = 'none';
  }

  function pagRequest(event='', page = 1) {
    const filterText = document.querySelector('.filter-title h5');

    if (search) {
      fetch(`${URL}/${search}&_page=${event ? event.target.textContent : page}&_limit=8`)
        .then(response => {
          if(response.ok) return response.json();
        })
        .then(data => renderCards(data))
    }

    else if (filterText.textContent !== '–§–∏–ª—å—Ç—Ä') {
      fetch(`${URL}/?category_like=${filterText.textContent}&_page=${event ? event.target.textContent : page}&_limit=8`)
        .then(response => {
          if(response.ok) return response.json();
        })
        .then(data => renderCards(data))
    } 
    
    else {
      fetch(`${URL}/?_page=${event ? event.target.textContent : page}&_limit=8`)
        .then(response => {
          if(response.ok) return response.json();
        })
        .then(data => renderCards(data))
    }
  }
  
}

//–ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞

function getData(request='') { 
  const goodsWrapper = document.querySelector('.goods');
  return fetch(`http://localhost:3000/goods${request}`)
    .then((response) => {
      if (response.ok) {
        return response.json();
      } else {
        throw new Error('–î–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –ø–æ–ª—É—á–µ–Ω—ã, –æ—à–∏–±–∫–∞: ' + response.status)
      }
    })
    .catch(err => {
      console.warn(err);
      goodsWrapper.innerHTML = '<div style="color: red; font-size: 30px; margin: 0 auto;">–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫!</div>'
    });
}

function renderCards(data) {
  const goodsWrapper = document.querySelector('.goods');
  document.querySelectorAll('.card').forEach(i => i.remove());
  data.forEach((good) => {
    const card = document.createElement('div');
    card.className = 'card';
    card.setAttribute('data-category', good.category);
    card.innerHTML = `
                ${good.sale ? '<div class="card-sale">üî•Hot Saleüî•</div>' : ''}
									<div class="card-img-wrapper">
										<span class="card-img-top"
											style="background-image: url('${good.img}')"></span>
									</div>
									<div class="card-body justify-content-between">
										<div class="card-price" style="${good.sale ? 'color:red;' : ''}">${good.price} ‚ÇΩ</div>
										<h5 class="card-title">${good.title}</h5>
										<button class="btn btn-primary">–í –∫–æ—Ä–∑–∏–Ω—É</button>
									</div>
								</div>
    `;
    goodsWrapper.append(card);
  });
  
}

//end –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞


//–ö–∞—Ç–∞–ª–æ–≥
async function renderCatalog() {
  const cards = document.querySelectorAll('.goods .card');
  const catalogList = document.querySelector('.catalog-list');
  const catalogBtn = document.querySelector('.catalog-button');
  const catalogWrapper = document.querySelector('.catalog');
  const filterText = document.querySelector('.filter-title h5');
  const categories = new Set();

  const response = await fetch('http://localhost:3000/goods');
  const result = await response.json();

  result.forEach((item) => {
    categories.add(item.category);
  });

  categories.forEach((category) => {
    const li = document.createElement('li');
    li.textContent = category;
    catalogList.append(li);
  });

  const allLi = catalogList.querySelectorAll('li');

  catalogBtn.addEventListener('click', (event) => {
    if (catalogWrapper.style.display) {
      catalogWrapper.style.display = '';
    } else {
      catalogWrapper.style.display = 'block';
    }

    if (event.target.tagName === 'LI') {
      allLi.forEach((elem) => {
        if (elem === event.target) {
          elem.classList.add('active');
        } else {
          elem.classList.remove('active');
        }
      });
    
      filterText.textContent = event.target.textContent;

      getData(`/?category_like=${event.target.textContent}`)
      .then(data => {
          renderCards(data);
          pagination(data);
          actionPage();
        })
     
      filter();
    }
  });
}
//end –ö–∞—Ç–∞–ª–æ–≥

//—Ñ–∏–ª—å—Ç—Ä –∞–∫—Ü–∏–π
// —Ñ—É–Ω–∫—Ü–∏—è actionPage –≤–µ—à–∞–µ—Ç —Å–æ–±—ã—Ç–∏—è –Ω–∞ —Ñ–∏–ª—å—Ç—Ä –∏ —á–µ–∫–±–æ–∫—Å—ã. –¢–∞–∫ –∂–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω –ø–æ–∏—Å–∫ –ø–æ —Ç–æ–≤–∞—Ä–∞–º
function actionPage() {
  const cards = document.querySelectorAll('.goods .card');
  const discountCheckbox = document.getElementById('discount-checkbox');
  const min = document.getElementById('min');
  const max = document.getElementById('max');
  const search = document.querySelector('.search-wrapper_input');
  const searchBtn = document.querySelector('.search-btn');
  const filterText = document.querySelector('.filter-title h5');

  discountCheckbox.addEventListener('click', filter);
  min.addEventListener('change', filter);
  max.addEventListener('change', filter);

  searchBtn.addEventListener('click', searchHandler);
  search.addEventListener('keydown', (e) => {
    if (e.key === 'Enter') searchHandler();
  })

  function searchHandler() {
    //—Ä–∞–Ω—å—à–µ –ø–æ–∏—Å–∫ –ø—Ä–æ–≤–æ–¥–∏–ª—Å—è –ø–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞–º –∫–∞—Ä—Ç–æ—á–µ–∫, –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ/–î–û–ú-–¥–µ—Ä–µ–≤–µ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç
    /*const searchText = new RegExp(search.value.trim(), 'i');
    cards.forEach((card) => {
      const title = card.querySelector('.card-title');
      if (!searchText.test(title.textContent)) {
        card.style.display = 'none';
      } else {
        card.style.display = '';
      }

      search.value = '';
    });*/
    //—Å–µ–π—á–∞—Å –¥–µ–ª–∞–µ—Ç—Å—è —Å–µ—Ç–µ–≤–æ–π –∑–∞–ø—Ä–æ—Å –Ω–∞ json-server
    const searchText = search.value.trim();
    getData(`/?title_like=${searchText}`)
    .then(data => {
      renderCards(data);
      pagination(data, `?title_like=${searchText}`);
      actionPage();
    });
    search.value = '';
    filterText.textContent = '–§–∏–ª—å—Ç—Ä';
  }

};

//end —Ñ–∏–ª—å—Ç—Ä –∞–∫—Ü–∏–π

//—Ñ—É–Ω–∫–∏—è filter —Ä–µ–∞–ª–∏–∑—É–µ—Ç —Ä–∞–±–æ—Ç—É —Ñ–∏–ª—å—Ç—Ä–∞, —á–µ–±–æ–∫—Å–∞ –∏ –∫–∞—Ç–∞–ª–æ–≥–∞
function filter() {
  const cards = document.querySelectorAll('.goods .card');
  const discountCheckbox = document.getElementById('discount-checkbox');
  const min = document.getElementById('min');
  const max = document.getElementById('max');
  const activeLi = document.querySelector('.catalog li.active');

  cards.forEach((card) => {
    const cardPrice = card.querySelector('.card-price');
    const price = parseFloat(cardPrice.textContent);
    const discount = card.querySelector('.card-sale');

    card.style.display = '';

    if ((min.value && price < min.value) || (max.value && price > max.value)) {
      card.style.display = 'none';
    } else if (discountCheckbox.checked && !discount) {
      card.style.display = 'none';
    } 
  });
}

// checkbox. —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –≥–∞–ª–æ—á–∫–∏ –≤ —á–µ–∫–±–æ–∫—Å–µ

function toggleCheckbox() {
  const checkbox = document.querySelectorAll('.filter-check_checkbox');

  checkbox.forEach((elem) => {
    elem.addEventListener('change', function () {
      if (this.checked) {
        this.nextElementSibling.classList.add('checked');
      } else {
        this.nextElementSibling.classList.remove('checked');
      }
    });
  });
};

//end checkbox

//–∫–æ—Ä–∑–∏–Ω–∞. —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç/—Å–∫—Ä—ã–≤–∞–µ—Ç –æ–∫–Ω–æ –∫–æ—Ä–∑–∏–Ω—ã

function toggleCart() {
  const btnCart = document.getElementById('cart'); //–∏–∫–æ–Ω–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã
  const modalCart = document.querySelector('.cart');
  const btnCartClose = document.querySelector('.cart-close');

  btnCart.addEventListener('click', () => {
    modalCart.style.display = 'flex';
    document.body.style.overflow = 'hidden';
  })

  btnCartClose.addEventListener('click', () => {
    modalCart.style.display = 'none';
    document.body.style.overflow = '';
  })
}

//end –∫–æ—Ä–∑–∏–Ω–∞

//–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—ã

function addCart() {
  const cards = document.querySelectorAll('.goods .card');
  const cartWrapper = document.querySelector('.cart-wrapper');
  const cartEmpty = document.getElementById('cart-empty');
  const countGoods = document.querySelector('.counter');

  cards.forEach((card) => {
    const btn = card.querySelector('button');

    btn.addEventListener('click', () => {
      const cardClone = card.cloneNode(true);
      cartWrapper.append(cardClone);
      showData();

      const removeBtn = cardClone.querySelector('button');
      removeBtn.textContent = '–£–¥–∞–ª–∏—Ç—å –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã';
      removeBtn.addEventListener('click', () => {
        cardClone.remove();
        showData();
      })
    });
  });

  //–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–±—â—É—é —Å—É–º–º—É —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ
  function showData() {
    const cardsCart = cartWrapper.querySelectorAll('.card');
    const cardsPrice = cartWrapper.querySelectorAll('.card-price');
    const cartTotal = document.querySelector('.cart-total span');
    let sum = 0;

    countGoods.textContent = cardsCart.length;

    cardsPrice.forEach((cardPrice) => {
      let price = parseFloat(cardPrice.textContent);
      sum += price;
    });

    cartTotal.textContent = sum;

    if (cardsCart.length) {
      cartEmpty.remove();
    } else {
      cartWrapper.append(cartEmpty);
    };
  };

};

//end –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É

getData().then((data) => {
  renderCards(data);
  pagination(data);
  renderCatalog();
  toggleCheckbox();
  toggleCart();
  addCart();
  actionPage();
});